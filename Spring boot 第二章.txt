第二章
	2.1 Bean的Scope
		2.1.1 点睛
			Scope描述的是Spring 容器如何新建Bean的实例的。Spring的Scope有五种，通过@Scope注解实现。
				1.Singleton：一个Spring容器中只有一个Bean的实例，全容器共享一个实例。
				2.Prototype：每次调用新建一个Bean的实例。
				3.Request：Web 项目中，给每一个HTTP request新建一个bean实例。
				4.Session：Web项目中，每给一个HTTP Session新建一个bean实例。
				5.GlobalSession：这个只在portal应用中有用，给每一个global http session 新建一个bean实例。
	2.2 Spring EL 和资源调用
		2.2.1 点睛
			Spring EL-Spring表达式语言，支持在XML和注解中使用表达式，类似于JSP的EL	表达式语言。
			Spring主要在注解@Value的参数中使用表达式
			1.注入普通字符		@Value("字符串") 属性名；
			2.注入操作系统属性	@Value("#{systemProperties['os.name']}")
			3.注入表达式运算结果	 @Value("#{T(java.lang.Math).random()*100.0}")
			4.注入其他bean的属性	@Value("#{demoService.another}")
			5.注入文件内容	@Value("classpath:test.txt")
			6.注入网址内容	@Value("http://www.baidu,com")
			7.注入属性文件	@Value("${book.name}")
				需要在类上加上@PropertySource("classpath:test.properties")引入properties文件
	2.3 Bean的初始化和销毁
		2.3.1 点睛
			在我们实际的开发的时候，经常会遇到在Bean在使用之前和之后做处理
			1.Java配置方式：使用@Bean的initMethod和destroyMethod(相当于xml配置的init-method和destory-method)
				@Bean(initMethod="init",destroyMethod = "destroy")
   				BeanWayService beanWayService(){
      			  return new BeanWayService();
   				}
			2.注解方式：利用JSR-250的@PostConstruct和@PreDestroy
	2.4 Profile
		2.4.1 点睛
			Profile为在不同环境下使用不同的配置提供了支持
			1.通过设定Environment的ActiveProfiles来设定当前context需要使用的配置环境。在开发中使用@Profile注解类或者方法，达到在不同环境下选择实例化不同的bean
			2.通过设定jvm的spring.profiles.active参数来设置配置环境。
			3.Web项目设置在Servlet的context parameter中
	2.5 事件(Application Event)
		2.5.1 点睛
			spring的事件支持bean之间的消息通信
			1.自定义事件，集成ApplicationEvent
			2.定义事件监听器，实现ApplicationListener
			3.使用容器发布事件
			